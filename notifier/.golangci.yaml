linters:
  enable:
    - asciicheck      # Simple linter to check that your code does not contain non-ASCII identifiers.
    - bidichk         # Checks for dangerous unicode character sequences.
    - bodyclose       # Checks that HTTP response bodies are closed correctly.
    - copyloopvar     # Checks for pointers to enclosing loop variables.
    - errcheck        # Checks for unchecked errors, which can lead to critical bugs.
    - errname         # Ensures consistent naming of error variables.
    - errorlint       # Finds code that may cause issues with Go 1.13's error wrapping scheme.
    - exhaustive      # Checks exhaustiveness of enum switch statements.
    - forcetypeassert # Detects unnecessary or unsafe type assertions.
    - goconst         # Finds repeated constants that could be replaced by a constant.
    - gocritic        # Provides diagnostics to check for bugs, performance issues, and code simplifications.
    - gocyclo         # Computes the cyclomatic complexity of functions.
    - gofmt           # Checks if code is properly formatted.
    - gofumpt         # Enforces a stricter format than `gofmt`.
    - gosimple        # Specializes in simplifying code.
    - govet           # Reports suspicious constructs, such as Printf calls whose arguments do not align with the format string.
    - ineffassign     # Detects assignments to variables that are never used.
    - nilerr          # Finds code that returns nil despite checking if an error is not nil.
    - nilnil          # Checks for simultaneous return of a nil error and an invalid value.
    - nolintlint      # Reports ill-formed or insufficient nolint directives.
    - prealloc        # Finds slice declarations that could potentially be preallocated for performance.
    - revive          # Fast, configurable, extensible linter for Go; a drop-in replacement for golint.
    - sqlclosecheck   # Ensures database connections are closed properly.
    - staticcheck     # A go vet on steroids, applying a ton of static analysis checks.
    - stylecheck      # Checks for stylistic issues, enforcing idiomatic Go style.
    - typecheck       # Like the front-end of a Go compiler, parses and type-checks Go code.
    - unconvert       # Detects redundant type conversions.
    - unparam         # Reports unused function parameters.
    - unused          # Checks for unused constants, variables, functions, and types.
    - zerologlint     # Detects incorrect usage of zerolog where logs aren't dispatched with Send or Msg.

linters-settings:
  gocyclo:
    min-complexity: 15
  gocognit:
    min-complexity: 10
  dupl:
    threshold: 100
  nakedret:
    max-func-lines: 50
  funlen:
    lines: 80
    statements: 50
  errcheck:
    check-type-assertions: true
    check-blank: true
  exhaustive:
    # Program elements to check for exhaustiveness.
    # Default: [ switch ]
    check:
      - switch
      - map
    default-signifies-exhaustive: true
    explicit-exhaustive-map: true
  nolintlint:
    # Exclude following linters from requiring an explanation.
    # Default: []
    allow-no-explanation: [funlen, gocognit, lll]
    # Enable to require an explanation of nonzero length after each nolint directive.
    # Default: false
    require-explanation: true
    # Enable to require nolint directives to mention the specific linter being suppressed.
    # Default: false
    require-specific: false
  revive:
    ignore-generated-header: true
    # https://github.com/mgechev/revive#recommended-configuration
    rules:
      - name: atomic
        disabled: false
      - name: time-equal
        disabled: false
      - name: errorf
        disabled: false
      - name: context-as-argument
        disabled: false
      - name: context-keys-type
        disabled: false
      - name: blank-imports
        disabled: false
      - name: dot-imports
        disabled: false
      - name: error-return
        disabled: false
      - name: error-strings
        disabled: false
      - name: if-return
        disabled: false
      - name: increment-decrement
        disabled: false
      - name: var-declaration
        disabled: false
      - name: range
        disabled: false
      - name: indent-error-flow
        disabled: false
      - name: superfluous-else
        disabled: false
      - name: empty-block
        disabled: false
      - name: unused-parameter
        disabled: false
      - name: defer
        disabled: false
run:
  # Timeout for analysis, e.g. 30s, 5m.
  # Default: 1m
  timeout: 5m
output:
  # Sort results by: filepath, line and column.
  sort-results: true
  print-issued-lines: true
issues:
  # Maximum issues count per one linter.
  # Set to 0 to disable.
  # Default: 50
  max-issues-per-linter: 100
  # Maximum count of issues with the same text.
  # Set to 0 to disable.
  # Default: 3
  max-same-issues: 4
