// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: copyfrom.go

package pgordersqry

import (
	"context"
)

// iteratorForInsertOrderItems implements pgx.CopyFromSource.
type iteratorForInsertOrderItems struct {
	rows                 []InsertOrderItemsParams
	skippedFirstNextCall bool
}

func (r *iteratorForInsertOrderItems) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForInsertOrderItems) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].SkuID,
		r.rows[0].OrderID,
		r.rows[0].Count,
		r.rows[0].CreatedAt,
		r.rows[0].UpdatedAt,
	}, nil
}

func (r iteratorForInsertOrderItems) Err() error {
	return nil
}

func (q *Queries) InsertOrderItems(ctx context.Context, arg []InsertOrderItemsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"orders", "order_items"}, []string{"sku_id", "order_id", "count", "created_at", "updated_at"}, &iteratorForInsertOrderItems{rows: arg})
}
