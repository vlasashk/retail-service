// Code generated by mockery v2.42.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// CartAdder is an autogenerated mock type for the CartAdder type
type CartAdder struct {
	mock.Mock
}

// AddItem provides a mock function with given fields: ctx, userID, skuID, count
func (_m *CartAdder) AddItem(ctx context.Context, userID int64, skuID int64, count uint16) error {
	ret := _m.Called(ctx, userID, skuID, count)

	if len(ret) == 0 {
		panic("no return value specified for AddItem")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int64, int64, uint16) error); ok {
		r0 = rf(ctx, userID, skuID, count)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewCartAdder creates a new instance of CartAdder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCartAdder(t interface {
	mock.TestingT
	Cleanup(func())
}) *CartAdder {
	mock := &CartAdder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
